const express = require('express')
const router = express.Router()
const multer = require('multer')
const adminController = require('../controllers/adminController')
const authController = require('../controllers/authController')
const userController = require('../controllers/userController')
const catController = require('../controllers/catController')
const adoptionRequestController = require('../controllers/adoptionRequestController')
const favoriteController = require('../controllers/favoriteController')
const authMiddleware = require('../middlewares/authMiddleware')
const storage = multer.memoryStorage()
const upload = multer({storage: storage})

router.get('/users', authMiddleware.authenticateToken, adminController.getAllUsers)
router.delete('/users/:id', authMiddleware.authenticateToken, adminController.deleteUser)
router.delete('/cats/:id', authMiddleware.authenticateToken, adminController.deleteCat)

router.post('/register', authController.register)
router.get('/activate/:id', authController.activate)
router.post('/login', authMiddleware.authenticateLogin, authController.login)
router.post('/reset', authController.resetPasswordRequest)
router.post('/reset/:id', authController.resetPassword)
router.post('/logout', authController.logout)
router.post('/refresh/token', authMiddleware.validateRefreshToken, authController.refresh)

router.get('/users', authMiddleware.authenticateToken, userController.getOneUser)
router.put('/users', authMiddleware.authenticateToken, upload.single('file'), userController.editUser)
router.put('/users/address', authMiddleware.authenticateToken, userController.editAddressUser)
router.put('/users/username', authMiddleware.authenticateToken, userController.editUsername)
router.put('/users/password', authMiddleware.authenticateToken, userController.editPassword)
router.delete('/users', authMiddleware.authenticateToken, userController.deleteUser)
router.get('/users/cats', authMiddleware.authenticateToken, userController.getMyCats)

router.get('/cats', catController.getAllCats)
router.get('/cats/:id', catController.getOneCat)
router.post('/cats', authMiddleware.authenticateToken, upload.single('file'), catController.addCat)
router.put('/cats/:id', authMiddleware.authenticateToken, upload.single('file'), catController.editCat)
router.delete('/cats/:id', authMiddleware.authenticateToken, catController.deleteCat)

router.post('/adopt/:id', authMiddleware.authenticateToken, adoptionRequestController.adoptCat)
router.put('/adopt/:id', authMiddleware.authenticateToken, adoptionRequestController.handleAdoptionRequest)
router.get('/adopt', authMiddleware.authenticateToken, adoptionRequestController.getAdoptionRequests)
router.get('/adopt/:id', authMiddleware.authenticateToken, adoptionRequestController.getAdoptionRequest)
router.delete('/adopt/:id', authMiddleware.authenticateToken, adoptionRequestController.deleteAdoptionRequest)

router.get('/favorites', authMiddleware.authenticateToken, favoriteController.getFavorites)
router.post('/cats/:id/favorites', authMiddleware.authenticateToken, favoriteController.addCatToFavorites)
router.post('/favorites/:id', authMiddleware.authenticateToken, favoriteController.adoptFavorite)
router.delete('/favorites/:id', authMiddleware.authenticateToken, favoriteController.deleteFavorite)

module.exports = router
